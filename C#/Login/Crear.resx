<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>