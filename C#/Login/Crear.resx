<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAEsUExURf///8fi+wAAAKHN+WmOwERysM7q/1NfaaXS/8zo/1VznKbU/zdcj8rm/0NWaM3p/22T
        x+zs7KWlpZG44LPL4Ud2t/n5+a2trb6+vmJiYtfX18/PzxIfLxwmNObm5sjIyL/Z8VdXV5KSksDe+39/
        f0RERIWXqKC2yq7U+ioqKvHy8yUqLk1NTV9seDc3N3V1dZOnuTpKWm6MqkFYd2GDsZueotHg8Ki/1LS3
        ukVOV36hxDc+RZrE7k1idys3Q4yz2REREeHy/xwyRQAKFEhSW3SEkomMkEhihCsxNlZ/uGdqbDdLZRor
        Q0Nbe195kxsjKic9URMcJGN2iG+Ttaq0vpehrAAAE8nU31Fyk4Gq0iAgIS09UyZAYz1mnbjK3XOKojBQ
        fJ272Wp5hl5+nvOV7qcAABlXSURBVHhe7Z0JWxNJGseh0RwwAYJMgCAEIoIitwfIIREQXXFUhrl0nN1V
        v/932Oqu/1tXV1VXdxJ09pnf8+wO1Sbp/qeq3quqOwP/8A//AFabrb29qampiSYODAzMT7Xm8effmNX5
        6cfnM68iyQT+ZWBgL2mvyQN/N+rNx5trvyUqVKSgNj/wspG0GqvJf/4u1Kc3755yASZS4SY/sMNbU9Fa
        e5b/+b3TaLXf8Wu3IhUu8gOfeYvrnWnx1vfL6t7r5ErdSIV3+YFJrYUe/U5Z3UO3+JAK7yftucGkUU8a
        oke/S2Yzeu/d0/Lm0rmca40XF7fZ4ffPk9Y0f9FJKWkNLG5Kr/J9sDpxyS/RpLNRPt+bbnJ7adJ4/mTl
        mNvQJf7yr/yFTfbnxpT9Td+EeZhFndPF871mqA+AQgzS86TRafPWN6c1k1yPzubjYHGcJ7s/n0TRGG/g
        Qy74CP7GtNSAhfOqXXASPfnMJbXwQbeS1reldYCLESxO1fFvxcGggBEa+IbRzuwavxTB4kRPYukz/mn7
        vNWI2t9IY910D+c9SxV+/5l93An3lHH82pFe9PpocHsneDqNf+gNz7cur/hfPBbYuHb/uKf7v9e9D5ob
        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
</value>
  </data>
</root>